{"ast":null,"code":"var _jsxFileName = \"/Users/yardennaokun/Documents/Gokstad Akademiet/React/arbeidskrav-1-react-ordspill/src/App.jsx\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport autumnList from \"./data/Høst.json\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const words = autumnList.ord;\n  const getRandomWord = wordList => {\n    const index = Math.floor(Math.random() * wordList.length);\n    return wordList[index];\n  };\n  const [inputValue, setInputValue] = useState(\"\");\n  const [randomWord, setRandomWord] = useState(getRandomWord(words));\n  const [indexWord, setIndexWord] = useState(0);\n  const [score, setScore] = use;\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  useEffect(() => {\n    // Check if inputValue and randomWord have characters at indexWord\n    if (inputValue[indexWord] && randomWord[indexWord]) {\n      console.log(inputValue[indexWord], randomWord[indexWord]);\n      // Increment indexWord\n      setIndexWord(lastIndex => lastIndex + 1);\n    }\n  }, [inputValue, randomWord, indexWord]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Random Word: \", randomWord]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setRandomWord(getRandomWord(words)),\n      children: [\"Get Another Random Word\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"VUIplIx9su9WE/O/whIkJyiR9Cs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["autumnList","useEffect","useState","jsxDEV","_jsxDEV","App","_s","words","ord","getRandomWord","wordList","index","Math","floor","random","length","inputValue","setInputValue","randomWord","setRandomWord","indexWord","setIndexWord","score","setScore","use","handleInputChange","event","target","value","console","log","lastIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/yardennaokun/Documents/Gokstad Akademiet/React/arbeidskrav-1-react-ordspill/src/App.jsx"],"sourcesContent":["import \"./App.css\";\nimport autumnList from \"./data/Høst.json\";\nimport { useEffect, useState } from \"react\";\n\nconst App = () => {\n  const words = autumnList.ord;\n  const getRandomWord = (wordList) => {\n    const index = Math.floor(Math.random() * wordList.length);\n    return wordList[index];\n  };\n  const [inputValue, setInputValue] = useState(\"\");\n  const [randomWord, setRandomWord] = useState(getRandomWord(words));\n  const [indexWord, setIndexWord] = useState(0);\n  const [score, setScore] = use\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  useEffect(() => {\n    // Check if inputValue and randomWord have characters at indexWord\n    if (inputValue[indexWord] && randomWord[indexWord]) {\n      console.log(inputValue[indexWord], randomWord[indexWord]);\n      // Increment indexWord\n      setIndexWord((lastIndex) => lastIndex + 1);\n    }\n  }, [inputValue, randomWord, indexWord]);\n\n\n\n  return (\n    <div>\n      <h1>Random Word: {randomWord}</h1>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n      <button onClick={() => setRandomWord(getRandomWord(words))}>\n        Get Another Random Word{\" \"}\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,UAAU,MAAM,kBAAkB;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,KAAK,GAAGP,UAAU,CAACQ,GAAG;EAC5B,MAAMC,aAAa,GAAIC,QAAQ,IAAK;IAClC,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,QAAQ,CAACK,MAAM,CAAC;IACzD,OAAOL,QAAQ,CAACC,KAAK,CAAC;EACxB,CAAC;EACD,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAACO,aAAa,CAACF,KAAK,CAAC,CAAC;EAClE,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGC,GAAG;EAE7B,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCT,aAAa,CAACS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED3B,SAAS,CAAC,MAAM;IACd;IACA,IAAIe,UAAU,CAACI,SAAS,CAAC,IAAIF,UAAU,CAACE,SAAS,CAAC,EAAE;MAClDS,OAAO,CAACC,GAAG,CAACd,UAAU,CAACI,SAAS,CAAC,EAAEF,UAAU,CAACE,SAAS,CAAC,CAAC;MACzD;MACAC,YAAY,CAAEU,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IAC5C;EACF,CAAC,EAAE,CAACf,UAAU,EAAEE,UAAU,EAAEE,SAAS,CAAC,CAAC;EAIvC,oBACEhB,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,GAAI,eAAa,EAACd,UAAU;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClChC,OAAA;MAAOiC,IAAI,EAAC,MAAM;MAACT,KAAK,EAAEZ,UAAW;MAACsB,QAAQ,EAAEb;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrEhC,OAAA;MAAQmC,OAAO,EAAEA,CAAA,KAAMpB,aAAa,CAACV,aAAa,CAACF,KAAK,CAAC,CAAE;MAAAyB,QAAA,GAAC,yBACnC,EAAC,GAAG;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAnCID,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}